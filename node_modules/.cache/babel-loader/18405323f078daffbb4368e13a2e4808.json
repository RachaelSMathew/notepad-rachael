{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelmathew/Desktop/Firebase_user_auth/src/components/Notebook/Notebook.js\",\n    _s = $RefreshSig$();\n\n// components/Notebook/NoteAdd.js\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/database\";\nimport \"./Notebook.css\";\nimport ShowMoreText from \"react-show-more-text\";\nimport { useAuthValue } from '../../AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notebook = props => {\n  _s();\n\n  const emojis = [\"😀\", \"😃\", \"😄\", \"😁\", \"😆\", \"😅\", \"🤣\", \"😂\", \"🙂\", \"🙃\", \"😉\", \"😊\", \"😇\", \"🥰\", \"😍\", \"🤩\", \"😘\", \"😗\", \"😚\", \"😙\", \"😋\", \"😛\", \"😝\", \"😜\", \"🤪\", \"🤨\", \"🧐\", \"🤓\", \"😎\", \"🤩\", \"🥳\", \"😏\", \"😒\", \"😞\", \"😔\", \"😟\", \"😕\", \"🙁\", \"☹️\", \"😣\", \"😖\", \"😫\", \"😩\", \"🥺\", \"😢\", \"😭\", \"😤\", \"😠\", \"😡\", \"🤬\", \"🤯\", \"😳\", \"🥵\", \"🥶\", \"😱\", \"😨\", \"😰\", \"😥\", \"😓\", \"🤗\", \"🤔\", \"🤭\", \"🤫\", \"🤥\", \"😶\", \"😐\", \"😑\", \"😬\", \"🙄\", \"😯\", \"😦\", \"😧\", \"😮\", \"😲\", \"😴\", \"🤤\", \"😪\", \"😵\", \"🤐\", \"🥴\", \"🤢\", \"🤮\", \"🤕\", \"🥳\", \"😷\", \"🤒\", \"🤕\", \"🤑\", \"🤠\", \"😈\", \"👿\", \"👹\", \"👺\", \"💀\", \"👻\", \"👽\", \"🤖\", \"💩\", \"😺\", \"😸\", \"😹\", \"😻\", \"😼\", \"😽\", \"🙀\", \"😿\", \"😾\"];\n\n  const getRandomEmoji = email => {\n    let emoji = emojis[Math.floor(Math.random() * emojis.length)];\n    return emoji;\n  };\n\n  const [avatar, setAvatar] = useState([]);\n  const {\n    currentUser\n  } = useAuthValue();\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = note => {\n    setChecked(!checked);\n    if (checked) firebase.database().ref(\"notebook/public/\" + note.id).update({\n      title: \"note.title\"\n    });else firebase.database().ref(\"notebook/public/\" + note.id).update({\n      title: note.title\n    });\n  };\n\n  const deleteNotebook = id => {\n    firebase.database().ref(\"notebook\").child(id).remove();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"notebook-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notebook\",\n        children: props.notebook.map((note, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${note.public ? \"notebookInfo publicPost\" : \"notebookInfo\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notebookInfo-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: /*#__PURE__*/_jsxDEV(ShowMoreText, {\n                  lines: 3,\n                  width: 340,\n                  keepNewLines: true,\n                  children: note.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), note.public && note.email !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notebookInfo-title\",\n              children: getRandomEmoji(note.email)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notebookInfo-description\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(ShowMoreText, {\n                  lines: 3,\n                  width: 340,\n                  keepNewLines: true,\n                  children: note.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), note.public ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDF0E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this) : null]\n          }, note.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Notebook, \"asCamxTgt+Lq4TpOQ2q0d6rWVMI=\", false, function () {\n  return [useAuthValue];\n});\n\n_c = Notebook;\nexport default Notebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notebook\");","map":{"version":3,"sources":["/Users/rachaelmathew/Desktop/Firebase_user_auth/src/components/Notebook/Notebook.js"],"names":["React","useState","useEffect","firebase","ShowMoreText","useAuthValue","Notebook","props","emojis","getRandomEmoji","email","emoji","Math","floor","random","length","avatar","setAvatar","currentUser","checked","setChecked","handleChange","note","database","ref","id","update","title","deleteNotebook","child","remove","notebook","map","index","public","description"],"mappings":"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","sourcesContent":["// components/Notebook/NoteAdd.js\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/database\";\nimport \"./Notebook.css\";\nimport ShowMoreText from \"react-show-more-text\";\nimport {useAuthValue} from '../../AuthContext'\nconst Notebook = (props) => {\n  const emojis = [\"😀\", \"😃\", \"😄\", \"😁\", \"😆\", \"😅\", \"🤣\", \"😂\", \"🙂\", \"🙃\", \"😉\", \"😊\", \"😇\", \"🥰\", \"😍\", \"🤩\", \"😘\", \"😗\", \"😚\", \"😙\", \"😋\", \"😛\", \"😝\", \"😜\", \"🤪\", \"🤨\", \"🧐\", \"🤓\", \"😎\", \"🤩\", \"🥳\", \"😏\", \"😒\", \"😞\", \"😔\", \"😟\", \"😕\", \"🙁\", \"☹️\", \"😣\", \"😖\", \"😫\", \"😩\", \"🥺\", \"😢\", \"😭\", \"😤\", \"😠\", \"😡\", \"🤬\", \"🤯\", \"😳\", \"🥵\", \"🥶\", \"😱\", \"😨\", \"😰\", \"😥\", \"😓\", \"🤗\", \"🤔\", \"🤭\", \"🤫\", \"🤥\", \"😶\", \"😐\", \"😑\", \"😬\", \"🙄\", \"😯\", \"😦\", \"😧\", \"😮\", \"😲\", \"😴\", \"🤤\", \"😪\", \"😵\", \"🤐\", \"🥴\", \"🤢\", \"🤮\", \"🤕\", \"🥳\", \"😷\", \"🤒\", \"🤕\", \"🤑\", \"🤠\", \"😈\", \"👿\", \"👹\", \"👺\", \"💀\", \"👻\", \"👽\", \"🤖\", \"💩\", \"😺\", \"😸\", \"😹\", \"😻\", \"😼\", \"😽\", \"🙀\", \"😿\", \"😾\"]\n  const getRandomEmoji = (email) => {\n    let emoji = emojis[Math.floor(Math.random() * emojis.length)]\n\n    return emoji\n  }\n  const [avatar, setAvatar] = useState([]);\n\n  const {currentUser} = useAuthValue()\n  const [checked, setChecked] = React.useState(false);\n  const handleChange = (note) => {\n    setChecked(!checked)\n    if(checked)\n      firebase.database().ref(\"notebook/public/\"+note.id).update({title: \"note.title\"})\n    else \n      firebase.database().ref(\"notebook/public/\"+note.id).update({title: note.title})\n  };\n  const deleteNotebook = (id) => {\n    firebase.database().ref(\"notebook\").child(id).remove();\n  };\n\n  return (\n    <>\n      <section className=\"notebook-container\">\n        <div className=\"notebook\">\n          {props.notebook.map((note, index) => (\n            <React.Fragment key={index}>\n              <div className={`${note.public ? \"notebookInfo publicPost\" : \"notebookInfo\"}`} key={note.id}>\n                <div className=\"notebookInfo-title\">\n                  <h3><ShowMoreText lines={3} width={340} keepNewLines={true}>{note.title}</ShowMoreText></h3>\n                </div>\n                {note.public  && note.email !== currentUser?.email ? (\n                  <div className=\"notebookInfo-title\">\n                    {getRandomEmoji(note.email)}\n                  </div>\n                ) : (\n                  null\n                )}\n                <div className=\"notebookInfo-description\">\n                  <p><ShowMoreText lines={3} width={340} keepNewLines={true}>{note.description}</ShowMoreText></p>\n                </div>\n                {note.public ? (\n                  <h3>🌎</h3> \n                ) : (null)}\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Notebook;"]},"metadata":{},"sourceType":"module"}